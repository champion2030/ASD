# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'window.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QKeySequence
from PyQt5.QtWidgets import QInputDialog, QLineEdit, QWidget, QTableWidgetItem, QShortcut, QMessageBox

from src.hashmap import HashMap


class Ui_MainWindow(QWidget):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("Хэш-таблицы")
        MainWindow.resize(880, 592)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tableWidget = QtWidgets.QTableWidget(99, 3, self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(10, 10, 601, 561))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setEnabled(True)
        self.tableWidget.setHorizontalHeaderLabels(["Индекс", "Улица", "Хеш-код"])
        self.header = self.tableWidget.horizontalHeader()
        self.header.setSectionResizeMode(QtWidgets.QHeaderView.Stretch)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(680, 40, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(640, 70, 211, 41))
        self.lineEdit.setObjectName("lineEdit")
        font = QtGui.QFont()
        font.setPointSize(11)
        self.lineEdit.setFont(font)
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(640, 120, 211, 28))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(660, 215, 171, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(640, 240, 211, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(640, 290, 211, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(640, 155, 211, 28))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(640, 330, 211, 28))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setObjectName("pushButton_4")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 880, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.hash = HashMap()
        self.map = self.hash.get_map()
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Индекс (Ключ)"))
        self.pushButton.setText(_translate("MainWindow", "Найти запись по ключу"))
        self.label_2.setText(_translate("MainWindow", "Улица (значение)"))
        self.pushButton_2.setText(_translate("MainWindow", "Добавить запись"))
        self.pushButton_3.setText(_translate("MainWindow", "Удалить запись"))
        self.pushButton_4.setText(_translate("MainWindow", "Очистить таблицу"))
        self.pushButton.clicked.connect(self.get_value_by_key)
        self.pushButton_2.clicked.connect(self.add_entry)
        self.pushButton_4.clicked.connect(self.clear_table)
        self.pushButton_3.clicked.connect(self.delete)

    def get_text(self):
        text, okPressed = QInputDialog.getText(self, "Ключ", "Введите ключ", QLineEdit.Normal, "")
        if okPressed:
            if text.isnumeric():
                return text
            else:
                return "None"

    def add_entry(self):
        value = self.lineEdit_2.text()
        key = self.get_text()
        if key != "None":
            self.map = self.hash.add(key, value)
            self.plot_table(self.map)
        else:
            error_dialog = QMessageBox()
            error_dialog.setWindowTitle("Ошибка ввода")
            error_dialog.setText("Не корректное значение")
            error_dialog.setIcon(QMessageBox.Critical)
            error_dialog.exec_()



    def plot_table(self, map):
        if map != 0:
            for i in range(0, 99):
                if map[i] is not None:
                    array1 = map[i][0]
                    if array1 is not None:
                        for j in range(0, 3):
                            self.tableWidget.setItem(i, j, QtWidgets.QTableWidgetItem(str(array1[j])))
                else:
                    for j in range(0, 3):
                        self.tableWidget.setItem(i,j,QtWidgets.QTableWidgetItem(str('')))
        else:
            print("удалили")
            error_dialog = QMessageBox()
            error_dialog.setWindowTitle("Нет места")
            error_dialog.setText("Таблица переполнена")
            error_dialog.setIcon(QMessageBox.Critical)
            error_dialog.exec_()


    def get_value_by_key(self):
        key = self.lineEdit.text()
        if key.isnumeric():
            value = self.hash.get_value(key)
            if value != -1:
                dialog = QMessageBox()
                dialog.setWindowTitle("Найденный элемент")
                dialog.setText(str(value))
                dialog.exec_()
                print(value)
            else:
                error_dialog = QMessageBox()
                error_dialog.setWindowTitle("Ошибка")
                error_dialog.setText("Такого ключа не существует")
                error_dialog.setIcon(QMessageBox.Critical)
                error_dialog.exec_()
        else:
            error_dialog = QMessageBox()
            error_dialog.setWindowTitle("Ошибка")
            error_dialog.setText("Не корректный ввод")
            error_dialog.setIcon(QMessageBox.Critical)
            error_dialog.exec_()

    def delete(self):
        key = self.lineEdit.text()
        test = self.hash.delete(key)
        if test == 0 or test is None:
            error_dialog = QMessageBox()
            error_dialog.setWindowTitle("Ошибка")
            error_dialog.setText("Такого ключа не существует")
            error_dialog.setIcon(QMessageBox.Critical)
            error_dialog.exec_()
        else:
            self.map = test
            self.plot_table(self.map)


    def clear_table(self):
        self.tableWidget.clear()
        self.map = [None] * 15
        self.hash.clear_map()
        self.tableWidget.setHorizontalHeaderLabels(["Индекс", "Улица", "Хеш-код"])


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())